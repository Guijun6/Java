题目描述
输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，
所有的偶数位于位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。


import java.util.*;

public class Solution {
    public void reOrderArray(int [] array) {
        if (array.length == 0) {
            return;
        }
        Queue<Integer> queueOdd = new LinkedList<>();
        Queue<Integer> queueEven = new LinkedList<>();
        for (int i = 0; i < array.length; i++) {
            if (array[i] % 2 != 0) {
                queueOdd.add(array[i]);
            }else{
                queueEven.add(array[i]);
            }
        }
        for (int i = 0; i < array.length; i++) {
            if (!queueOdd.isEmpty()) {
                array[i] = queueOdd.remove();
            }else{
                array[i] = queueEven.remove();
            }
        }
    }
}
