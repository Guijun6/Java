题目描述
输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。
输出描述:
对应每个测试案例，输出两个数，小的先输出。



import java.util.*;

public class Solution {
    public ArrayList<Integer> FindNumbersWithSum(int [] array,int sum) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        if (array.length == 0) {
            return arrayList;
        }
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < array.length; i++) {
            for (int j = i + 1; j < array.length; j++) {
                if (array[i] + array[j] == sum) {
                    map.put(array[i], array[j]);
                }
            }
        }
        Set<Map.Entry<Integer, Integer>> set = map.entrySet();
        Iterator<Map.Entry<Integer, Integer>> it = set.iterator();

        int i = 0;
        int j = 0;
        if (it.hasNext()) {
            Map.Entry<Integer, Integer> entry = it.next();
            i  = entry.getKey();
            j = entry.getValue();
        }else{
            return arrayList;
        }
        while (it.hasNext()) {
            Map.Entry<Integer, Integer> entry = it.next();
            if ((i * j) > (entry.getKey() * entry.getValue())) {
                i = entry.getKey();
                j = entry.getValue();
            }
        }
        
        arrayList.add(i);
        arrayList.add(j);
        return arrayList;
    }
}
