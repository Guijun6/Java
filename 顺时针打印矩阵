题目描述
输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，
例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.



import java.util.ArrayList;
public class Solution {
    public ArrayList<Integer> printMatrix(int [][] matrix) {
       ArrayList<Integer> result = new ArrayList<Integer>();
        if(matrix == null){
            return result;
        }

        int m = matrix.length;
        int n = 0;
        if(m > 0){
            n = matrix[0].length;
        }
        for(int j = 0; j < n; j++){
                result.add(matrix[0][j]);
        }
        if(m == 1){
            return result;
        }else{
            int[][] mat = new int[m-1][n];

            for(int i = 1; i < m; i++){
                for(int j = 0; j < n; j++){
                    mat[i-1][j] = matrix[i][j];
                }
            }
            result.addAll(printMatrix(rotateMatrix(mat, m-1, n)));
        }

        return result;

    }

    public static int[][] rotateMatrix(int[][] mat, int m, int n) {//逆时针旋转90度
        // write code here

        if(mat == null){
            return null;
        }
        int[][] rmat = new int[n][m];
        for(int i = 0; i< n; i++){
            for(int j = 0; j < m; j++){
                rmat[i][j] = mat[j][n-i-1];
            }
        }

        return rmat;
    }
}
