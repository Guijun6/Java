题目描述
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。
假设输入的前序遍历和中序遍历的结果中都不含重复的数字。
例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        if(pre.length <= 0){
            return null;
        }
        
        return rebuildBTreeR(pre, 0, pre.length-1, in, 0, in.length-1);
    }
    public TreeNode rebuildBTreeR(int[] pre, int preStart, int preEnd, int[] in, int inStart, int inEnd){
        //直接处理根节点
        TreeNode root = new TreeNode(pre[preStart]);
        
        //判断递归终止条件
        if(preStart == preEnd){
            if(inStart == inEnd)
                return root;
        }
        //在中序遍历中找根节点
        int i = inStart;
        while(in[i] != pre[preStart] && i <= inEnd){
            i++;
        }
        
        int leftlength = i - inStart;
        int leftPreEnd = preStart + leftlength;
        //递归左子树
        if(leftlength > 0)
            root.left = rebuildBTreeR(pre, preStart+1, leftPreEnd, in, inStart, i-1);
        
        //递归右子树
        if(leftlength < (preEnd-preStart))
            root.right = rebuildBTreeR(pre, leftPreEnd+1, preEnd, in, i+1, inEnd);
        
        return root;
    }
}
