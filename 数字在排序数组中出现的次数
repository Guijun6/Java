题目描述
统计一个数字在排序数组中出现的次数。

public class Solution {
    public int GetNumberOfK(int [] array , int k) {
       if (array.length == 0) {
            return 0;
        }
        if (array.length == 1 && array[0] == k) {
            return 1;
        }
        if (array.length == 1 && array[0] != k) {
            return 0;
        }
        int fast = findFirstPos(array, k, 0, array.length-1);
        int last = findLastPos(array, k, 0, array.length-1);
        if(fast == -1)
            return 0;
        return last-fast+1;
    }
    public int findFirstPos(int[] array, int k, int begin, int end) {
        if (begin > end) {
            return -1;
        }
        int mid = begin + end-begin/2;
        if (array[mid] > k) {
            return findFirstPos(array, k, begin, mid-1);
        } else if (array[mid] < k) {
            return findFirstPos(array, k, mid + 1, end);
        } else if (array[mid] == k && mid-1 >= 0 && array[mid - 1] == k) {
            return findFirstPos(array, k, begin, mid - 1);
        } else {
            return mid;
        }
    }
    public int findLastPos(int[] array, int k, int begin, int end) {
        if (begin > end) {
            return 0;
        }
        int mid = begin + end-begin/2;
        if (array[mid] > k) {
            return findLastPos(array, k, begin, mid-1);
        } else if (array[mid] < k) {
            return findLastPos(array, k, mid + 1, end);
        } else if (array[mid] == k && mid+1 < array.length && array[mid + 1] == k) {
            return findLastPos(array, k, mid + 1, end);
        } else {
            return mid;
        }
    }
    
}
